# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-09-08 01:48
from __future__ import unicode_literals

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('patronymic', models.CharField(blank=True, max_length=250, null=True, verbose_name='\u041e\u0442\u0447\u0435\u0441\u0442\u0432\u043e')),
                ('country', models.CharField(default='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0430\u044f \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u044f', max_length=250, null=True, verbose_name='\u0421\u0442\u0440\u0430\u043d\u0430')),
                ('region', models.CharField(blank=True, max_length=250, null=True, verbose_name='\u041a\u0440\u0430\u0439, \u043e\u0431\u043b\u0430\u0441\u0442\u044c, \u0440\u0435\u0441\u043f\u0443\u0431\u043b\u0438\u043a\u0430')),
                ('city', models.CharField(help_text='\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: \u0433. \u041f\u0440\u043e\u0445\u043b\u0430\u0434\u043d\u044b\u0439 \u0438\u043b\u0438 \u0441. \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0435', max_length=250, null=True, verbose_name='\u041d\u0430\u0441\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442')),
                ('adress', models.CharField(blank=True, help_text='\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: \u0443\u043b. \u041b\u0435\u043d\u0438\u043d\u0430 10 \u0438\u043b\u0438 \u043f\u0435\u0440. \u041a\u0440\u0430\u0441\u043d\u044b\u0439 5', max_length=250, null=True, verbose_name='\u0423\u043b\u0438\u0446\u0430, \u0434\u043e\u043c')),
                ('index', models.CharField(blank=True, max_length=250, null=True, verbose_name='\u041f\u043e\u0447\u0442\u043e\u0432\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441')),
                ('telephone_1', models.CharField(blank=True, max_length=250, null=True, verbose_name='\u0422\u0435\u043b\u0435\u0444\u043e\u043d 1')),
                ('telephone_2', models.CharField(blank=True, max_length=250, null=True, verbose_name='\u0422\u0435\u043b\u0435\u0444\u043e\u043d 2')),
                ('telephone_3', models.CharField(blank=True, max_length=250, null=True, verbose_name='\u0422\u0435\u043b\u0435\u0444\u043e\u043d 3')),
                ('skype', models.CharField(blank=True, max_length=250, null=True, verbose_name='\u0421\u043a\u0430\u0439\u043f')),
                ('torgpred_request', models.BooleanField(default=False, help_text='\u042f \u0445\u043e\u0447\u0443 \u0431\u044b\u0442\u044c \u0432\u0430\u0448\u0438\u043c \u0442\u043e\u0440\u0433\u043e\u0432\u044b\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u0438\u0442\u0435\u043b\u0435\u043c (\u0422\u041f)', verbose_name='\u0417\u0430\u044f\u0432\u043a\u0430 \u043d\u0430 \u0422\u041f')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c',
                'verbose_name_plural': '\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
